======================================
Документация для приложения Google API
======================================


Запуск сервера разработки
=========================

Для запуска приложения в режиме отладки выполните следующие действия:

1. Если на вашем ПК не установлен Git, то установите его в соответствии с инструкциями на сайте
   https://git-scm.com/downloads/.

2. Перейдите в рабочую папку (папка, в которую будет скопирован проект) и произведите клонирование
   проекта с GitHub. В командной строке выполните:

   git clone https://github.com/motuskov/google_api.git

3. Если на вашем ПК не установлен Docker, то установите его в соответствии с инструкциями на сайте
   https://docs.docker.com/get-docker/.

4. Перейдите в папку проекта, который был клонирован на шаге 2 и в командной строке выполните:

   docker compose up -d

5. Дождитесь окончания развертывания и запуска контейнеров Docker, в браузере перейдите по адресу:

   http://localhost:3000/

6. Дождитесь обновления данных. Можете приступать к экспериментам.


Доступ к файлу источника данных
===============================

Доступ к файлу источника данных возможен по ссылке:

https://docs.google.com/spreadsheets/d/1I8CvbwvJpcTeibzXnj9RS9MxQqy2clLTooE46E2rmbY/


Доступ к панели администрирования Django
========================================

Для получения доступа к панели администрирования Django выполните следующие действия:

1. Создайте административного пользователя. Для этого перейдите в папку проекта и в командной
   строке выполните:

   docker-compose run backend-app python manage.py createsuperuser

2. Следуйте инструкциям, чтобы задать имя пользователя, e-mail и пароль пользователя.

3. В браузере перейдите по адресу:

   http://localhost:8000/admin/

4. Введите имя пользователя и пароль, указанные на шаге 2, и нажмите кнопку "Log in".


Тестирование функции уведомления через Telegram
===============================================

Для проверки функции уведомления через Telegram выполните следующие действия:

1. В приложении Telegram в строке поиска введите "#MotuskovBot" и выберите из списка позицию
   "GoogleAPI".

2. Нажмите кнопку "START"/"НАЧАТЬ".

3. В появившемся меню выберете команду "/subscribe", чтобы подписаться на уведомления.


Настройки приложения
====================

Основные настройки приложения находятся в файле "google_api/google_api/settings.py" папки проекта:

GOOGLE_API_TOKEN_FILENAME - имя и путь к файлу данных авторизации Google API
GOOGLE_API_SCOPES - перечень используемых сервисов Google API
GOOGLE_API_CHECK_DOCUMENT_MODIFIED_TIME - включение/выключение функции проверки даты последнего
  изменения файла источника данных
GOOGLE_API_PROCESS_ROW_COUNT - количество строк, считываемых из файла источника данных за один раз

SPREADSHEET_ID - уникальный номер документа Google Sheets, используемого в качестве источника данных
SHEET_NAME - название листа документа Google Sheets, на котором расположены данные
FIRST_DATA_ROW - номер строки, с которой начинается считывание данных

TELEGRAM_BOT_TOKEN - токен бота Telegram, используемого для отправки уведомлений

EXCHANGE_RATE_URL - адрес (URL) для получения данных о курсе валют
EXCHANGE_RATE_EXPIRATION_TIME - время хранения курса валюты в кэше


Функция проверки даты последнего изменения файла источника данных
=================================================================

Если функция включена, то программа сравнивает дату изменения файла данных при текущем запросе с датой,
полученной в предыдущем запросе. Если даты совпадают, то обновление данных в БД не производится (при
необходимости производится обновление стоимости в рублях).

По умолчанию, функция выключена.
